# Generated by Django 5.1.7 on 2025-04-14 17:01

import core.utils
import django.core.validators
import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('accounts', '0002_remove_client_home_url_remove_client_image_url_and_more'),
        ('payments', '0001_initial'),
    ]

    operations = [
        migrations.AddField(
            model_name='plan',
            name='code',
            field=models.CharField(blank=True, help_text='Unique, machine-readable name for the plan (e.g., for syncing with external systems)', max_length=128, unique=True, validators=[django.core.validators.RegexValidator(message='Code must contain only lowercase letters, numbers, or hyphens', regex='^[a-z0-9-]+$')], verbose_name='developer name'),
        ),
        migrations.AlterField(
            model_name='plan',
            name='client',
            field=models.ForeignKey(help_text='The client for plan', on_delete=django.db.models.deletion.CASCADE, related_name='plans', to='accounts.client', verbose_name='client'),
        ),
        migrations.AlterField(
            model_name='plan',
            name='created_at',
            field=models.DateTimeField(auto_now_add=True, help_text='Date and time the plan was created', verbose_name='created at'),
        ),
        migrations.AlterField(
            model_name='plan',
            name='description',
            field=models.TextField(blank=True, help_text='Description of a plan', null=True, verbose_name='description'),
        ),
        migrations.AlterField(
            model_name='plan',
            name='is_enabled',
            field=models.BooleanField(default=False, help_text='Whether the plan is available for use', verbose_name='is enabled'),
        ),
        migrations.AlterField(
            model_name='plan',
            name='is_recurring',
            field=models.BooleanField(default=True, help_text='Whether the plan automatically renews', verbose_name='is recurring'),
        ),
        migrations.AlterField(
            model_name='plan',
            name='name',
            field=models.CharField(help_text='Name of the plan', max_length=128, verbose_name='name'),
        ),
        migrations.AlterField(
            model_name='plan',
            name='period',
            field=models.PositiveIntegerField(choices=[(1, 'DAY'), (2, 'WEEK'), (3, 'MONTH'), (4, 'YEAR')], help_text='Billing period duration type', verbose_name='period'),
        ),
        migrations.AlterField(
            model_name='plan',
            name='price',
            field=models.DecimalField(decimal_places=2, help_text='Number of periods for the subscription (e.g., if period is MONTH and term is 2, the subscription lasts 2 months).', max_digits=40, verbose_name='price'),
        ),
        migrations.AlterField(
            model_name='processor',
            name='client_id',
            field=models.CharField(blank=True, help_text='Client ID', max_length=255, null=True, verbose_name='client ID'),
        ),
        migrations.AlterField(
            model_name='processor',
            name='endpoint_secret',
            field=models.CharField(blank=True, help_text='Secret used to verify webhook payloads for provider (optional)', max_length=255, null=True, verbose_name='endpoint secret'),
        ),
        migrations.AlterField(
            model_name='processor',
            name='is_enabled',
            field=models.BooleanField(default=False, help_text='Indicates if these credentials are currently active', verbose_name='is active'),
        ),
        migrations.AlterField(
            model_name='processor',
            name='is_sandbox',
            field=models.BooleanField(default=True, help_text='Indicates if these credentials relates to sandbox', verbose_name='is sandbox'),
        ),
        migrations.AlterField(
            model_name='processor',
            name='secret',
            field=models.CharField(help_text='Secret', max_length=255, verbose_name='secret'),
        ),
        migrations.AlterField(
            model_name='processor',
            name='type',
            field=models.CharField(choices=[('paypal', 'PayPal')], help_text='The payment processor type', max_length=20, verbose_name='processor type'),
        ),
        migrations.AlterField(
            model_name='processor',
            name='webhook_secret',
            field=models.CharField(default=core.utils.generate_base_secret, editable=False, help_text='Secret used to create link for webhook route', max_length=40, unique=True, verbose_name='webhook secret'),
        ),
    ]
