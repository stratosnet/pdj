# Generated by Django 5.1.7 on 2025-04-17 13:01

import core.utils
import django.core.validators
import django.db.models.deletion
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('accounts', '0002_user_is_mailing_subscribed'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Invoice',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('external_id', models.CharField(max_length=128, unique=True, verbose_name='external_id')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='created at')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='updated at')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='payments', to=settings.AUTH_USER_MODEL, verbose_name='user')),
            ],
            options={
                'verbose_name': 'invoice',
                'verbose_name_plural': 'invoices',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Payment',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('amount', models.DecimalField(decimal_places=2, max_digits=16, verbose_name='amount')),
                ('currency', models.CharField(default='USD', max_length=3, verbose_name='currency')),
                ('status', models.PositiveIntegerField(choices=[(1, 'Pending'), (2, 'Canceled'), (3, 'Success'), (4, 'Failure'), (5, 'Expired')], default=1, verbose_name='status')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='created at')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='updated at')),
                ('invoice', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='payments', to='payments.invoice', verbose_name='invoice')),
            ],
            options={
                'verbose_name': 'payment',
                'verbose_name_plural': 'payments',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Plan',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(help_text='Name of the plan', max_length=128, verbose_name='name')),
                ('code', models.CharField(blank=True, help_text='Unique, machine-readable name for the plan (e.g., for syncing with external systems)', max_length=128, null=True, unique=True, validators=[django.core.validators.RegexValidator(message='Code must contain only lowercase letters, numbers, or hyphens', regex='^[a-z0-9-]+$')], verbose_name='code')),
                ('description', models.TextField(blank=True, help_text='Description of a plan', null=True, verbose_name='description')),
                ('period', models.PositiveIntegerField(choices=[(1, 'DAY'), (2, 'WEEK'), (3, 'MONTH'), (4, 'YEAR')], help_text='Billing period duration type', verbose_name='period')),
                ('term', models.PositiveIntegerField(default=1, help_text='number of periods (e.g., 1 month, 2 years)', verbose_name='term')),
                ('price', models.DecimalField(decimal_places=2, help_text='Number of periods for the subscription (e.g., if period is MONTH and term is 2, the subscription lasts 2 months).', max_digits=40, verbose_name='price')),
                ('is_recurring', models.BooleanField(default=True, help_text='Whether the plan automatically renews', verbose_name='is recurring')),
                ('is_enabled', models.BooleanField(default=False, help_text='Whether the plan is available for use', verbose_name='is enabled')),
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='Date and time the plan was created', verbose_name='created at')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='updated at')),
                ('client', models.ForeignKey(help_text='The client for plan', on_delete=django.db.models.deletion.CASCADE, related_name='plans', to='accounts.client', verbose_name='client')),
            ],
            options={
                'verbose_name': 'plan',
                'verbose_name_plural': 'plans',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Processor',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('type', models.CharField(choices=[('paypal', 'PayPal')], help_text='The payment processor type', max_length=20, verbose_name='processor type')),
                ('client_id', models.CharField(blank=True, help_text='Client ID', max_length=255, null=True, verbose_name='client ID')),
                ('secret', models.CharField(help_text='Secret', max_length=255, verbose_name='secret')),
                ('endpoint_secret', models.CharField(blank=True, help_text='Secret used to verify webhook payloads for provider (optional)', max_length=255, null=True, verbose_name='endpoint secret')),
                ('webhook_secret', models.CharField(default=core.utils.generate_base_secret, editable=False, help_text='Secret used to create link for webhook route', max_length=40, unique=True, verbose_name='webhook secret')),
                ('is_sandbox', models.BooleanField(default=True, help_text='Indicates if these credentials relates to sandbox', verbose_name='is sandbox')),
                ('is_enabled', models.BooleanField(default=False, help_text='Indicates if these credentials are currently active', verbose_name='is active')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='created at')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='updated at')),
            ],
            options={
                'verbose_name': 'processor',
                'verbose_name_plural': 'processors',
                'ordering': ['-created_at'],
                'constraints': [models.UniqueConstraint(fields=('type', 'secret'), name='unique_processor_type_secret')],
            },
        ),
        migrations.CreateModel(
            name='PlanProcessorLink',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('external_id', models.CharField(max_length=128, unique=True, verbose_name='external_id')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='created at')),
                ('plan', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='links', to='payments.plan', verbose_name='plan')),
                ('processor', models.ForeignKey(help_text='the payment processor service', on_delete=django.db.models.deletion.CASCADE, related_name='links', to='payments.processor', verbose_name='processor')),
            ],
            options={
                'verbose_name': 'plan processor link',
                'verbose_name_plural': 'plan processor links',
                'ordering': ['-created_at'],
            },
        ),
        migrations.AddField(
            model_name='invoice',
            name='processor',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='invoices', to='payments.processor', verbose_name='processor'),
        ),
        migrations.CreateModel(
            name='Subscription',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('start_at', models.DateTimeField(verbose_name='start at')),
                ('end_at', models.DateTimeField(blank=True, null=True, verbose_name='end at')),
                ('suspend_at', models.DateTimeField(blank=True, null=True, verbose_name='suspend at')),
                ('next_billing_at', models.DateTimeField(blank=True, null=True, verbose_name='next billing at')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='created at')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='updated at')),
                ('next_billing_plan', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='future_subscriptions', to='payments.plan', verbose_name='future plan')),
                ('payment', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='subscription', to='payments.payment', verbose_name='payment')),
                ('plan', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='subscriptions', to='payments.plan', verbose_name='plan')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='subscriptions', to=settings.AUTH_USER_MODEL, verbose_name='user')),
            ],
            options={
                'verbose_name': 'subscription',
                'verbose_name_plural': 'subscriptions',
                'ordering': ['-created_at'],
            },
        ),
    ]
