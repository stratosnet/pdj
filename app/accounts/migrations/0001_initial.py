# Generated by Django 5.1.7 on 2025-04-14 15:51

import accounts.models
import core.utils
import django.contrib.auth.models
import django.db.models.deletion
import django.utils.timezone
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Client',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(help_text="client's full name or company name", max_length=20, verbose_name='name')),
                ('description', models.TextField(blank=True, help_text='additional information about the client', null=True, verbose_name='description')),
                ('client_id', models.CharField(default=core.utils.generate_base_secret, editable=False, help_text='client ID', max_length=40, unique=True, verbose_name='client ID')),
                ('client_secret', models.CharField(default=core.utils.generate_base_secret, editable=False, help_text='client secret', max_length=40, unique=True, verbose_name='client secret')),
                ('product_name', models.CharField(help_text='escription of a product which provided by client', max_length=80, verbose_name='product name')),
                ('sku_prefix', models.CharField(blank=True, default=core.utils.generate_sku_prefix, help_text='SKU prefix for the product (if not set, will be automatically generated)', max_length=4, verbose_name='SKU prefix')),
                ('image_url', models.URLField(blank=True, help_text='The image URL for the product', null=True, verbose_name='image url')),
                ('home_url', models.URLField(blank=True, help_text='The home page URL for the product', null=True, verbose_name='home url')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created At')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated At')),
                ('is_enabled', models.BooleanField(default=False, help_text='designates whether this client is active', verbose_name='is enabled')),
            ],
            options={
                'verbose_name': 'client',
                'verbose_name_plural': 'clients',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Group',
            fields=[
            ],
            options={
                'proxy': True,
                'indexes': [],
                'constraints': [],
            },
            bases=('auth.group',),
            managers=[
                ('objects', django.contrib.auth.models.GroupManager()),
            ],
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('email', models.EmailField(max_length=254, unique=True, verbose_name='email address')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
            },
            managers=[
                ('objects', accounts.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='SSOIdentity',
            fields=[
                ('sub', models.UUIDField(help_text='unique identifier from sso provider', primary_key=True, serialize=False, unique=True, verbose_name='subject identifier')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='created at')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sso_identities', to=settings.AUTH_USER_MODEL, verbose_name='user')),
            ],
            options={
                'verbose_name': 'SSO identity',
                'verbose_name_plural': 'SSO identities',
                'ordering': ['-created_at'],
            },
        ),
    ]
