services:
  pdj_server:
    container_name: pdj_server
    build:
      context: .
      args:
        - BUILD_LOCAL=true
    env_file:
      - .env
    restart: always
    stdin_open: true
    tty: true
    volumes:
      - ./app:/app
    command: python manage.py runserver 0.0.0.0:8000
    # command: python manage.py runserver_plus 0.0.0.0:8000 --print-sql
    # command: /bin/sh
    ports:
      - 9060:8000
    extra_hosts:
      - 'host.docker.internal:host-gateway'
    networks:
      - pg_network
      - redis_network
    depends_on:
      - postgres
      - redis
    logging:
      driver: "json-file"
      options:
        max-size: "128m"
  pdj_worker:
    container_name: pdj_worker
    restart: always
    stdin_open: true
    tty: true
    build:
      context: .
      args:
        - BUILD_LOCAL=true
    env_file:
      - .env
    networks:
      - pg_network
      - redis_network
    command: >
      sh -c "./manage.py debug_celery"
    volumes:
      - ./app:/app
    depends_on:
      - postgres
      - redis
    logging:
      driver: "json-file"
      options:
        max-size: "128m"
  pdj_beat:
    container_name: pdj_beat
    restart: always
    build:
      context: .
      args:
        - BUILD_LOCAL=true
    env_file:
      - .env
    volumes:
      - ./app:/app
    networks:
      - pg_network
      - redis_network
    command: >
      sh -c "celery -A core beat -l info --pidfile=/tmp/celeryd.pid"
    depends_on:
      - postgres
      - redis
    logging:
      driver: "json-file"
      options:
        max-size: "128m"
  postgres:
    image: postgres:17.4
    restart: always
    environment:
      - POSTGRES_DB=${POSTGRES_DB:-pdj}
      - POSTGRES_USER=${POSTGRES_USER:-postgres}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-postgres}
    networks:
      - pg_network
    volumes:
      - pg_volume:/var/lib/postgresql/data
    logging:
      driver: "json-file"
      options:
        max-size: "128m"
  redis:
    restart: always
    image: redis:7.4.2-bookworm
    networks:
      - redis_network
    volumes:
      - redis_volume:/data
    logging:
      driver: "json-file"
      options:
        max-size: "128m"

networks:
  pg_network:
    driver: bridge
  redis_network:
    driver: bridge

volumes:
  pg_volume:
  redis_volume:
  static_volume:
  media_volume:
